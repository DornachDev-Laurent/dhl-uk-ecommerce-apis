<?php
/**
 * ParcelsProductReferenceData
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  DHLUK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DHL eCommerce UK API
 *
 * The DHL eCommerce UK API allows customers and partners to:  - Get available products based on delivery address and parcel size.  - Find servicepoints in the UK or worldwide.  - Create new shipments and optionally return labels.  - Get shipment customs documents.  - Request shipment cancellation.  - Request shipment amendment.  - Regenerate labels ready for reprinting.  - Get details of customer trading locations.  - Request a driver pickup from a customer trading location.  - Get information about driver pickups already requested.  - Track shipments.  - Get DHL eCommerce UK reference data to help you provide valid shipment data from your applications.  - Add a What 3 Words to a domestic shipment.  - Find a DHL Parcels Depot.   **`API Authentications:`** All API operations require an access token to be passed in the Authorization Header for each request. The token type is an OAuth 2.0 Bearer token. To get the token you have to call the Authentication operation of this API and provide **client_id** and **client_secret**. The Access Token is valid for defined amount of time so it is not necessary to request the token for each request. Developers should implement the client application in a way that the token will be requested again only after it expires.  **`Access Token Lifecycle:`** When you receive an Access Token, it is valid for 60 minutes. During this time, you don't have to request new token per each request, but you can simply reuse the same token to access API resources, until the token expires. The invalid token or token expiration will be indicated by HTTP Status Code 401 Unauthorized, then your application has to request new Access Token.    **Recommended sequence for creating a shipment with the Shipping Label API is as follows:**        1.  Use client_id and client_secret to authenticate and obtain an access token using /auth/v1/accesstoken (see details below). A client_id and client_secret can be obtained by registering on the DHL developer portal and then registering an app in the user dashboard.   2.  Prepare valid JSON request as per Shipping Label API POST request schema (see examples below). Use data above depending on your use-case.   3.  Send an API request the correct API endpoint for test/UAT or live/production:          test: https://api-uat.dhl.com/parceluk/shipping/v1/label              live: https://api.dhl.com/parceluk/shipping/v1/label          If the shipment request is valid and accepted then a new shipmentId and optionally labels will be returned in the response.  **Sample Pickup Accounts And Product codes:**    To test using the Shipping Label API, you may use the following accounts and additional settings.        UK Domestic Shipping | Codes  | Comments   ---|---|---   pickupAccount      | F020579  | DHL eCommerce UK domestic labels   orderedProduct            | 220      | Signature At Address Only - Next Day    International Road Shipping | Codes  | Comments   ---|---|---   pickupAccount      | F820579  | DHL eCommerce UK Parcel Connect labels   orderedProduct             | 206      | Parcel Connect               International Air Shipping | Codes  | Comments   ---|---|---   pickupAccount      | F520579 | DHL eCommerce UK International Labels   orderedProduct             | 101     | Worldwide Air
 *
 * The version of the OpenAPI document: 1.3.8
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace DHLUK\Model;

use \ArrayAccess;
use \DHLUK\ObjectSerializer;

/**
 * ParcelsProductReferenceData Class Doc Comment
 *
 * @category Class
 * @package  DHLUK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ParcelsProductReferenceData implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'parcelsProductReferenceData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'productCode' => 'string',
        'productName' => 'string',
        'shipmentType' => 'string',
        'sortOrder' => 'float',
        'maximumParcels' => 'float',
        'maximumWeight' => 'float',
        'fixedParcels' => 'float',
        'fixedWeight' => 'float',
        'dimensionsMandatory' => 'bool',
        'maximumLength' => 'float',
        'maximumWidth' => 'float',
        'maximumHeight' => 'float',
        'bulkyLength' => 'float',
        'bulkyWidth' => 'float',
        'bulkyHeight' => 'float',
        'bulkyGirth' => 'float',
        'accountType' => 'string',
        'shipmentIdentifierType' => 'string',
        'labelType' => 'string',
        'labelProductName' => 'string',
        'labelSortationName' => 'string',
        'barcodeProductCode' => 'string',
        'servicePointCollection' => 'bool',
        'servicePointDelivery' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'productCode' => null,
        'productName' => null,
        'shipmentType' => null,
        'sortOrder' => null,
        'maximumParcels' => null,
        'maximumWeight' => null,
        'fixedParcels' => null,
        'fixedWeight' => null,
        'dimensionsMandatory' => null,
        'maximumLength' => null,
        'maximumWidth' => null,
        'maximumHeight' => null,
        'bulkyLength' => null,
        'bulkyWidth' => null,
        'bulkyHeight' => null,
        'bulkyGirth' => null,
        'accountType' => null,
        'shipmentIdentifierType' => null,
        'labelType' => null,
        'labelProductName' => null,
        'labelSortationName' => null,
        'barcodeProductCode' => null,
        'servicePointCollection' => null,
        'servicePointDelivery' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'productCode' => 'productCode',
        'productName' => 'productName',
        'shipmentType' => 'shipmentType',
        'sortOrder' => 'sortOrder',
        'maximumParcels' => 'maximumParcels',
        'maximumWeight' => 'maximumWeight',
        'fixedParcels' => 'fixedParcels',
        'fixedWeight' => 'fixedWeight',
        'dimensionsMandatory' => 'dimensionsMandatory',
        'maximumLength' => 'maximumLength',
        'maximumWidth' => 'maximumWidth',
        'maximumHeight' => 'maximumHeight',
        'bulkyLength' => 'bulkyLength',
        'bulkyWidth' => 'bulkyWidth',
        'bulkyHeight' => 'bulkyHeight',
        'bulkyGirth' => 'bulkyGirth',
        'accountType' => 'accountType',
        'shipmentIdentifierType' => 'shipmentIdentifierType',
        'labelType' => 'labelType',
        'labelProductName' => 'labelProductName',
        'labelSortationName' => 'labelSortationName',
        'barcodeProductCode' => 'barcodeProductCode',
        'servicePointCollection' => 'servicePointCollection',
        'servicePointDelivery' => 'servicePointDelivery'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'productCode' => 'setProductCode',
        'productName' => 'setProductName',
        'shipmentType' => 'setShipmentType',
        'sortOrder' => 'setSortOrder',
        'maximumParcels' => 'setMaximumParcels',
        'maximumWeight' => 'setMaximumWeight',
        'fixedParcels' => 'setFixedParcels',
        'fixedWeight' => 'setFixedWeight',
        'dimensionsMandatory' => 'setDimensionsMandatory',
        'maximumLength' => 'setMaximumLength',
        'maximumWidth' => 'setMaximumWidth',
        'maximumHeight' => 'setMaximumHeight',
        'bulkyLength' => 'setBulkyLength',
        'bulkyWidth' => 'setBulkyWidth',
        'bulkyHeight' => 'setBulkyHeight',
        'bulkyGirth' => 'setBulkyGirth',
        'accountType' => 'setAccountType',
        'shipmentIdentifierType' => 'setShipmentIdentifierType',
        'labelType' => 'setLabelType',
        'labelProductName' => 'setLabelProductName',
        'labelSortationName' => 'setLabelSortationName',
        'barcodeProductCode' => 'setBarcodeProductCode',
        'servicePointCollection' => 'setServicePointCollection',
        'servicePointDelivery' => 'setServicePointDelivery'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'productCode' => 'getProductCode',
        'productName' => 'getProductName',
        'shipmentType' => 'getShipmentType',
        'sortOrder' => 'getSortOrder',
        'maximumParcels' => 'getMaximumParcels',
        'maximumWeight' => 'getMaximumWeight',
        'fixedParcels' => 'getFixedParcels',
        'fixedWeight' => 'getFixedWeight',
        'dimensionsMandatory' => 'getDimensionsMandatory',
        'maximumLength' => 'getMaximumLength',
        'maximumWidth' => 'getMaximumWidth',
        'maximumHeight' => 'getMaximumHeight',
        'bulkyLength' => 'getBulkyLength',
        'bulkyWidth' => 'getBulkyWidth',
        'bulkyHeight' => 'getBulkyHeight',
        'bulkyGirth' => 'getBulkyGirth',
        'accountType' => 'getAccountType',
        'shipmentIdentifierType' => 'getShipmentIdentifierType',
        'labelType' => 'getLabelType',
        'labelProductName' => 'getLabelProductName',
        'labelSortationName' => 'getLabelSortationName',
        'barcodeProductCode' => 'getBarcodeProductCode',
        'servicePointCollection' => 'getServicePointCollection',
        'servicePointDelivery' => 'getServicePointDelivery'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const SHIPMENT_TYPE_PARCELUK = 'parceluk';
    const SHIPMENT_TYPE_INTERNATIONAL = 'international';
    const ACCOUNT_TYPE_UK_DOMESTIC = 'ukDomestic';
    const ACCOUNT_TYPE_INTERNATIONAL_ROAD = 'internationalRoad';
    const ACCOUNT_TYPE_INTERNATIONAL_AIR = 'internationalAir';
    const ACCOUNT_TYPE_RETURNS = 'returns';
    const SHIPMENT_IDENTIFIER_TYPE_PARCELUK = 'parceluk';
    const SHIPMENT_IDENTIFIER_TYPE_MH10 = 'mh10';
    const SHIPMENT_IDENTIFIER_TYPE_S10 = 's10';
    const LABEL_TYPE_PARCEL_CONNECT_UK = 'parcel-connect-uk';
    const LABEL_TYPE_PARCEL_INTERNATIONAL_UK = 'parcel-international-uk';
    const LABEL_TYPE_DOMESTIC_UK = 'domestic-uk';
    const LABEL_TYPE_INTERNATIONAL_UK = 'international-uk';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getShipmentTypeAllowableValues()
    {
        return [
            self::SHIPMENT_TYPE_PARCELUK,
            self::SHIPMENT_TYPE_INTERNATIONAL,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAccountTypeAllowableValues()
    {
        return [
            self::ACCOUNT_TYPE_UK_DOMESTIC,
            self::ACCOUNT_TYPE_INTERNATIONAL_ROAD,
            self::ACCOUNT_TYPE_INTERNATIONAL_AIR,
            self::ACCOUNT_TYPE_RETURNS,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getShipmentIdentifierTypeAllowableValues()
    {
        return [
            self::SHIPMENT_IDENTIFIER_TYPE_PARCELUK,
            self::SHIPMENT_IDENTIFIER_TYPE_MH10,
            self::SHIPMENT_IDENTIFIER_TYPE_S10,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getLabelTypeAllowableValues()
    {
        return [
            self::LABEL_TYPE_PARCEL_CONNECT_UK,
            self::LABEL_TYPE_PARCEL_INTERNATIONAL_UK,
            self::LABEL_TYPE_DOMESTIC_UK,
            self::LABEL_TYPE_INTERNATIONAL_UK,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['productCode'] = $data['productCode'] ?? null;
        $this->container['productName'] = $data['productName'] ?? null;
        $this->container['shipmentType'] = $data['shipmentType'] ?? null;
        $this->container['sortOrder'] = $data['sortOrder'] ?? null;
        $this->container['maximumParcels'] = $data['maximumParcels'] ?? null;
        $this->container['maximumWeight'] = $data['maximumWeight'] ?? null;
        $this->container['fixedParcels'] = $data['fixedParcels'] ?? null;
        $this->container['fixedWeight'] = $data['fixedWeight'] ?? null;
        $this->container['dimensionsMandatory'] = $data['dimensionsMandatory'] ?? null;
        $this->container['maximumLength'] = $data['maximumLength'] ?? null;
        $this->container['maximumWidth'] = $data['maximumWidth'] ?? null;
        $this->container['maximumHeight'] = $data['maximumHeight'] ?? null;
        $this->container['bulkyLength'] = $data['bulkyLength'] ?? null;
        $this->container['bulkyWidth'] = $data['bulkyWidth'] ?? null;
        $this->container['bulkyHeight'] = $data['bulkyHeight'] ?? null;
        $this->container['bulkyGirth'] = $data['bulkyGirth'] ?? null;
        $this->container['accountType'] = $data['accountType'] ?? null;
        $this->container['shipmentIdentifierType'] = $data['shipmentIdentifierType'] ?? null;
        $this->container['labelType'] = $data['labelType'] ?? null;
        $this->container['labelProductName'] = $data['labelProductName'] ?? null;
        $this->container['labelSortationName'] = $data['labelSortationName'] ?? null;
        $this->container['barcodeProductCode'] = $data['barcodeProductCode'] ?? null;
        $this->container['servicePointCollection'] = $data['servicePointCollection'] ?? null;
        $this->container['servicePointDelivery'] = $data['servicePointDelivery'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['productCode'] === null) {
            $invalidProperties[] = "'productCode' can't be null";
        }
        if ($this->container['productName'] === null) {
            $invalidProperties[] = "'productName' can't be null";
        }
        if ($this->container['shipmentType'] === null) {
            $invalidProperties[] = "'shipmentType' can't be null";
        }
        $allowedValues = $this->getShipmentTypeAllowableValues();
        if (!is_null($this->container['shipmentType']) && !in_array($this->container['shipmentType'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'shipmentType', must be one of '%s'",
                $this->container['shipmentType'],
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['accountType'] === null) {
            $invalidProperties[] = "'accountType' can't be null";
        }
        $allowedValues = $this->getAccountTypeAllowableValues();
        if (!is_null($this->container['accountType']) && !in_array($this->container['accountType'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'accountType', must be one of '%s'",
                $this->container['accountType'],
                implode("', '", $allowedValues)
            );
        }

        if ($this->container['shipmentIdentifierType'] === null) {
            $invalidProperties[] = "'shipmentIdentifierType' can't be null";
        }
        $allowedValues = $this->getShipmentIdentifierTypeAllowableValues();
        if (!is_null($this->container['shipmentIdentifierType']) && !in_array($this->container['shipmentIdentifierType'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'shipmentIdentifierType', must be one of '%s'",
                $this->container['shipmentIdentifierType'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getLabelTypeAllowableValues();
        if (!is_null($this->container['labelType']) && !in_array($this->container['labelType'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'labelType', must be one of '%s'",
                $this->container['labelType'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets productCode
     *
     * @return string
     */
    public function getProductCode()
    {
        return $this->container['productCode'];
    }

    /**
     * Sets productCode
     *
     * @param string $productCode Product code
     *
     * @return self
     */
    public function setProductCode($productCode)
    {
        $this->container['productCode'] = $productCode;

        return $this;
    }

    /**
     * Gets productName
     *
     * @return string
     */
    public function getProductName()
    {
        return $this->container['productName'];
    }

    /**
     * Sets productName
     *
     * @param string $productName Product Name
     *
     * @return self
     */
    public function setProductName($productName)
    {
        $this->container['productName'] = $productName;

        return $this;
    }

    /**
     * Gets shipmentType
     *
     * @return string
     */
    public function getShipmentType()
    {
        return $this->container['shipmentType'];
    }

    /**
     * Sets shipmentType
     *
     * @param string $shipmentType Type of shipment this product can be used for
     *
     * @return self
     */
    public function setShipmentType($shipmentType)
    {
        $allowedValues = $this->getShipmentTypeAllowableValues();
        if (!in_array($shipmentType, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'shipmentType', must be one of '%s'",
                    $shipmentType,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['shipmentType'] = $shipmentType;

        return $this;
    }

    /**
     * Gets sortOrder
     *
     * @return float|null
     */
    public function getSortOrder()
    {
        return $this->container['sortOrder'];
    }

    /**
     * Sets sortOrder
     *
     * @param float|null $sortOrder Sort order used when displaying multiple products, lowest value equals highest sort order in a list. For example sort order 1 would be first item in the list
     *
     * @return self
     */
    public function setSortOrder($sortOrder)
    {
        $this->container['sortOrder'] = $sortOrder;

        return $this;
    }

    /**
     * Gets maximumParcels
     *
     * @return float|null
     */
    public function getMaximumParcels()
    {
        return $this->container['maximumParcels'];
    }

    /**
     * Sets maximumParcels
     *
     * @param float|null $maximumParcels Maximum number of parcels per shipment when using this product
     *
     * @return self
     */
    public function setMaximumParcels($maximumParcels)
    {
        $this->container['maximumParcels'] = $maximumParcels;

        return $this;
    }

    /**
     * Gets maximumWeight
     *
     * @return float|null
     */
    public function getMaximumWeight()
    {
        return $this->container['maximumWeight'];
    }

    /**
     * Sets maximumWeight
     *
     * @param float|null $maximumWeight Maximum weight per shipment when using this product
     *
     * @return self
     */
    public function setMaximumWeight($maximumWeight)
    {
        $this->container['maximumWeight'] = $maximumWeight;

        return $this;
    }

    /**
     * Gets fixedParcels
     *
     * @return float|null
     */
    public function getFixedParcels()
    {
        return $this->container['fixedParcels'];
    }

    /**
     * Sets fixedParcels
     *
     * @param float|null $fixedParcels Does this product have a fixed value for the number of parcels that must be applied if selected e.g. 1. If value is 0 then no fixed value applies
     *
     * @return self
     */
    public function setFixedParcels($fixedParcels)
    {
        $this->container['fixedParcels'] = $fixedParcels;

        return $this;
    }

    /**
     * Gets fixedWeight
     *
     * @return float|null
     */
    public function getFixedWeight()
    {
        return $this->container['fixedWeight'];
    }

    /**
     * Sets fixedWeight
     *
     * @param float|null $fixedWeight Does this product have a fixed value for weight that must be applied if selected e.g. 5. If value is 0 then no fixed value applies
     *
     * @return self
     */
    public function setFixedWeight($fixedWeight)
    {
        $this->container['fixedWeight'] = $fixedWeight;

        return $this;
    }

    /**
     * Gets dimensionsMandatory
     *
     * @return bool|null
     */
    public function getDimensionsMandatory()
    {
        return $this->container['dimensionsMandatory'];
    }

    /**
     * Sets dimensionsMandatory
     *
     * @param bool|null $dimensionsMandatory Is is mandatory to provide parcel dimensions when using this product?
     *
     * @return self
     */
    public function setDimensionsMandatory($dimensionsMandatory)
    {
        $this->container['dimensionsMandatory'] = $dimensionsMandatory;

        return $this;
    }

    /**
     * Gets maximumLength
     *
     * @return float|null
     */
    public function getMaximumLength()
    {
        return $this->container['maximumLength'];
    }

    /**
     * Sets maximumLength
     *
     * @param float|null $maximumLength Maximum parcel length when using this product. If value is 0 then no maximum applies
     *
     * @return self
     */
    public function setMaximumLength($maximumLength)
    {
        $this->container['maximumLength'] = $maximumLength;

        return $this;
    }

    /**
     * Gets maximumWidth
     *
     * @return float|null
     */
    public function getMaximumWidth()
    {
        return $this->container['maximumWidth'];
    }

    /**
     * Sets maximumWidth
     *
     * @param float|null $maximumWidth Maximum parcel width when using this product. If value is 0 then no maximum applies
     *
     * @return self
     */
    public function setMaximumWidth($maximumWidth)
    {
        $this->container['maximumWidth'] = $maximumWidth;

        return $this;
    }

    /**
     * Gets maximumHeight
     *
     * @return float|null
     */
    public function getMaximumHeight()
    {
        return $this->container['maximumHeight'];
    }

    /**
     * Sets maximumHeight
     *
     * @param float|null $maximumHeight Maximum parcel height when using this product. If value is 0 then no maximum applies
     *
     * @return self
     */
    public function setMaximumHeight($maximumHeight)
    {
        $this->container['maximumHeight'] = $maximumHeight;

        return $this;
    }

    /**
     * Gets bulkyLength
     *
     * @return float|null
     */
    public function getBulkyLength()
    {
        return $this->container['bulkyLength'];
    }

    /**
     * Sets bulkyLength
     *
     * @param float|null $bulkyLength When length of any parcel in shipment is greater than or equal to this value then shipment must be declared as bulky when the shipment is manifested. If value is 0 then this rule does not apply
     *
     * @return self
     */
    public function setBulkyLength($bulkyLength)
    {
        $this->container['bulkyLength'] = $bulkyLength;

        return $this;
    }

    /**
     * Gets bulkyWidth
     *
     * @return float|null
     */
    public function getBulkyWidth()
    {
        return $this->container['bulkyWidth'];
    }

    /**
     * Sets bulkyWidth
     *
     * @param float|null $bulkyWidth When width of any parcel in shipment is greater than or equal to this value then shipment must be declared as bulky when the shipment is manifested. If value is 0 then this rule does not apply
     *
     * @return self
     */
    public function setBulkyWidth($bulkyWidth)
    {
        $this->container['bulkyWidth'] = $bulkyWidth;

        return $this;
    }

    /**
     * Gets bulkyHeight
     *
     * @return float|null
     */
    public function getBulkyHeight()
    {
        return $this->container['bulkyHeight'];
    }

    /**
     * Sets bulkyHeight
     *
     * @param float|null $bulkyHeight When height of any parcel in shipment is greater than or equal to this value then shipment must be declared as bulky when the shipment is manifested. If value is 0 then this rule does not apply
     *
     * @return self
     */
    public function setBulkyHeight($bulkyHeight)
    {
        $this->container['bulkyHeight'] = $bulkyHeight;

        return $this;
    }

    /**
     * Gets bulkyGirth
     *
     * @return float|null
     */
    public function getBulkyGirth()
    {
        return $this->container['bulkyGirth'];
    }

    /**
     * Sets bulkyGirth
     *
     * @param float|null $bulkyGirth When girth of any parcel in shipment is greater than or equal to this value then shipment must be declared as bulky when the shipment is manifested. If value is 0 then this rule does not apply
     *
     * @return self
     */
    public function setBulkyGirth($bulkyGirth)
    {
        $this->container['bulkyGirth'] = $bulkyGirth;

        return $this;
    }

    /**
     * Gets accountType
     *
     * @return string
     */
    public function getAccountType()
    {
        return $this->container['accountType'];
    }

    /**
     * Sets accountType
     *
     * @param string $accountType Type of account required when creating a shipment for this product
     *
     * @return self
     */
    public function setAccountType($accountType)
    {
        $allowedValues = $this->getAccountTypeAllowableValues();
        if (!in_array($accountType, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'accountType', must be one of '%s'",
                    $accountType,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['accountType'] = $accountType;

        return $this;
    }

    /**
     * Gets shipmentIdentifierType
     *
     * @return string
     */
    public function getShipmentIdentifierType()
    {
        return $this->container['shipmentIdentifierType'];
    }

    /**
     * Sets shipmentIdentifierType
     *
     * @param string $shipmentIdentifierType Type of shipment identifier to generate when creating a new shipment for this product
     *
     * @return self
     */
    public function setShipmentIdentifierType($shipmentIdentifierType)
    {
        $allowedValues = $this->getShipmentIdentifierTypeAllowableValues();
        if (!in_array($shipmentIdentifierType, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'shipmentIdentifierType', must be one of '%s'",
                    $shipmentIdentifierType,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['shipmentIdentifierType'] = $shipmentIdentifierType;

        return $this;
    }

    /**
     * Gets labelType
     *
     * @return string|null
     */
    public function getLabelType()
    {
        return $this->container['labelType'];
    }

    /**
     * Sets labelType
     *
     * @param string|null $labelType Type of label to generate when producing a label for this product,
     *
     * @return self
     */
    public function setLabelType($labelType)
    {
        $allowedValues = $this->getLabelTypeAllowableValues();
        if (!is_null($labelType) && !in_array($labelType, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'labelType', must be one of '%s'",
                    $labelType,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['labelType'] = $labelType;

        return $this;
    }

    /**
     * Gets labelProductName
     *
     * @return string|null
     */
    public function getLabelProductName()
    {
        return $this->container['labelProductName'];
    }

    /**
     * Sets labelProductName
     *
     * @param string|null $labelProductName Product name to print on labels when a label for this product is generated
     *
     * @return self
     */
    public function setLabelProductName($labelProductName)
    {
        $this->container['labelProductName'] = $labelProductName;

        return $this;
    }

    /**
     * Gets labelSortationName
     *
     * @return string|null
     */
    public function getLabelSortationName()
    {
        return $this->container['labelSortationName'];
    }

    /**
     * Sets labelSortationName
     *
     * @param string|null $labelSortationName Sortation code to print on labels when a label for this product is generated. For deliveries in the United Kingdom this will be empty and the label sortation code will need to be looked up from the UKPostcodeDistrict resource using the UK delivery postcode
     *
     * @return self
     */
    public function setLabelSortationName($labelSortationName)
    {
        $this->container['labelSortationName'] = $labelSortationName;

        return $this;
    }

    /**
     * Gets barcodeProductCode
     *
     * @return string|null
     */
    public function getBarcodeProductCode()
    {
        return $this->container['barcodeProductCode'];
    }

    /**
     * Sets barcodeProductCode
     *
     * @param string|null $barcodeProductCode Product code to encode into a DHL routing barcode when generating a label
     *
     * @return self
     */
    public function setBarcodeProductCode($barcodeProductCode)
    {
        $this->container['barcodeProductCode'] = $barcodeProductCode;

        return $this;
    }

    /**
     * Gets servicePointCollection
     *
     * @return bool|null
     */
    public function getServicePointCollection()
    {
        return $this->container['servicePointCollection'];
    }

    /**
     * Sets servicePointCollection
     *
     * @param bool|null $servicePointCollection Does this product allow collections from ServicePoint's?
     *
     * @return self
     */
    public function setServicePointCollection($servicePointCollection)
    {
        $this->container['servicePointCollection'] = $servicePointCollection;

        return $this;
    }

    /**
     * Gets servicePointDelivery
     *
     * @return bool|null
     */
    public function getServicePointDelivery()
    {
        return $this->container['servicePointDelivery'];
    }

    /**
     * Sets servicePointDelivery
     *
     * @param bool|null $servicePointDelivery Does this product allow delivery to ServicePoint's?
     *
     * @return self
     */
    public function setServicePointDelivery($servicePointDelivery)
    {
        $this->container['servicePointDelivery'] = $servicePointDelivery;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


