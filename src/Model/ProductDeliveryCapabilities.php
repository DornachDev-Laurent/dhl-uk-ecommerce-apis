<?php
/**
 * ProductDeliveryCapabilities
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  DHLUK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DHL eCommerce UK API
 *
 * The DHL eCommerce UK API allows customers and partners to:  - Get available products based on delivery address and parcel size.  - Find servicepoints in the UK or worldwide.  - Create new shipments and optionally return labels.  - Get shipment customs documents.  - Request shipment cancellation.  - Request shipment amendment.  - Regenerate labels ready for reprinting.  - Get details of customer trading locations.  - Request a driver pickup from a customer trading location.  - Get information about driver pickups already requested.  - Track shipments.  - Get DHL eCommerce UK reference data to help you provide valid shipment data from your applications.  - Add a What 3 Words to a domestic shipment.  - Find a DHL Parcels Depot.   **`API Authentications:`** All API operations require an access token to be passed in the Authorization Header for each request. The token type is an OAuth 2.0 Bearer token. To get the token you have to call the Authentication operation of this API and provide **client_id** and **client_secret**. The Access Token is valid for defined amount of time so it is not necessary to request the token for each request. Developers should implement the client application in a way that the token will be requested again only after it expires.  **`Access Token Lifecycle:`** When you receive an Access Token, it is valid for 60 minutes. During this time, you don't have to request new token per each request, but you can simply reuse the same token to access API resources, until the token expires. The invalid token or token expiration will be indicated by HTTP Status Code 401 Unauthorized, then your application has to request new Access Token.    **Recommended sequence for creating a shipment with the Shipping Label API is as follows:**        1.  Use client_id and client_secret to authenticate and obtain an access token using /auth/v1/accesstoken (see details below). A client_id and client_secret can be obtained by registering on the DHL developer portal and then registering an app in the user dashboard.   2.  Prepare valid JSON request as per Shipping Label API POST request schema (see examples below). Use data above depending on your use-case.   3.  Send an API request the correct API endpoint for test/UAT or live/production:          test: https://api-uat.dhl.com/parceluk/shipping/v1/label              live: https://api.dhl.com/parceluk/shipping/v1/label          If the shipment request is valid and accepted then a new shipmentId and optionally labels will be returned in the response.  **Sample Pickup Accounts And Product codes:**    To test using the Shipping Label API, you may use the following accounts and additional settings.        UK Domestic Shipping | Codes  | Comments   ---|---|---   pickupAccount      | F020579  | DHL eCommerce UK domestic labels   orderedProduct            | 220      | Signature At Address Only - Next Day    International Road Shipping | Codes  | Comments   ---|---|---   pickupAccount      | F820579  | DHL eCommerce UK Parcel Connect labels   orderedProduct             | 206      | Parcel Connect               International Air Shipping | Codes  | Comments   ---|---|---   pickupAccount      | F520579 | DHL eCommerce UK International Labels   orderedProduct             | 101     | Worldwide Air
 *
 * The version of the OpenAPI document: 1.3.8
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace DHLUK\Model;

use \ArrayAccess;
use \DHLUK\ObjectSerializer;

/**
 * ProductDeliveryCapabilities Class Doc Comment
 *
 * @category Class
 * @description Delivery capabilities of this product is selected
 * @package  DHLUK
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class ProductDeliveryCapabilities implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'product_deliveryCapabilities';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'transitTimeDescription' => 'string',
        'minTransitTime' => 'int',
        'maxTransitTime' => 'int',
        'servicePoint' => 'bool',
        'servicePointLocationTypes' => '\DHLUK\Model\ProductDeliveryCapabilitiesServicePointLocationTypes[]',
        'customsDeclaration' => 'string',
        'inBoxReturn' => 'bool',
        'bulky' => 'bool',
        'accountType' => 'string',
        'neighbourDelivery' => 'bool',
        'secureLocationDelivery' => 'bool',
        'services' => '\DHLUK\Model\ProductDeliveryCapabilitiesServices[]',
        'iossApplies' => 'bool',
        'nonIossAllowed' => 'bool',
        'iossDutiesPaid' => 'string',
        'pallets' => 'bool',
        'exchangeOnDelivery' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'transitTimeDescription' => null,
        'minTransitTime' => null,
        'maxTransitTime' => null,
        'servicePoint' => null,
        'servicePointLocationTypes' => null,
        'customsDeclaration' => null,
        'inBoxReturn' => null,
        'bulky' => null,
        'accountType' => null,
        'neighbourDelivery' => null,
        'secureLocationDelivery' => null,
        'services' => null,
        'iossApplies' => null,
        'nonIossAllowed' => null,
        'iossDutiesPaid' => null,
        'pallets' => null,
        'exchangeOnDelivery' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'transitTimeDescription' => 'transitTimeDescription',
        'minTransitTime' => 'minTransitTime',
        'maxTransitTime' => 'maxTransitTime',
        'servicePoint' => 'servicePoint',
        'servicePointLocationTypes' => 'servicePointLocationTypes',
        'customsDeclaration' => 'customsDeclaration',
        'inBoxReturn' => 'inBoxReturn',
        'bulky' => 'bulky',
        'accountType' => 'accountType',
        'neighbourDelivery' => 'neighbourDelivery',
        'secureLocationDelivery' => 'secureLocationDelivery',
        'services' => 'services',
        'iossApplies' => 'iossApplies',
        'nonIossAllowed' => 'nonIossAllowed',
        'iossDutiesPaid' => 'iossDutiesPaid',
        'pallets' => 'pallets',
        'exchangeOnDelivery' => 'exchangeOnDelivery'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'transitTimeDescription' => 'setTransitTimeDescription',
        'minTransitTime' => 'setMinTransitTime',
        'maxTransitTime' => 'setMaxTransitTime',
        'servicePoint' => 'setServicePoint',
        'servicePointLocationTypes' => 'setServicePointLocationTypes',
        'customsDeclaration' => 'setCustomsDeclaration',
        'inBoxReturn' => 'setInBoxReturn',
        'bulky' => 'setBulky',
        'accountType' => 'setAccountType',
        'neighbourDelivery' => 'setNeighbourDelivery',
        'secureLocationDelivery' => 'setSecureLocationDelivery',
        'services' => 'setServices',
        'iossApplies' => 'setIossApplies',
        'nonIossAllowed' => 'setNonIossAllowed',
        'iossDutiesPaid' => 'setIossDutiesPaid',
        'pallets' => 'setPallets',
        'exchangeOnDelivery' => 'setExchangeOnDelivery'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'transitTimeDescription' => 'getTransitTimeDescription',
        'minTransitTime' => 'getMinTransitTime',
        'maxTransitTime' => 'getMaxTransitTime',
        'servicePoint' => 'getServicePoint',
        'servicePointLocationTypes' => 'getServicePointLocationTypes',
        'customsDeclaration' => 'getCustomsDeclaration',
        'inBoxReturn' => 'getInBoxReturn',
        'bulky' => 'getBulky',
        'accountType' => 'getAccountType',
        'neighbourDelivery' => 'getNeighbourDelivery',
        'secureLocationDelivery' => 'getSecureLocationDelivery',
        'services' => 'getServices',
        'iossApplies' => 'getIossApplies',
        'nonIossAllowed' => 'getNonIossAllowed',
        'iossDutiesPaid' => 'getIossDutiesPaid',
        'pallets' => 'getPallets',
        'exchangeOnDelivery' => 'getExchangeOnDelivery'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const CUSTOMS_DECLARATION_NONE = 'none';
    const CUSTOMS_DECLARATION_BASIC = 'basic';
    const CUSTOMS_DECLARATION_FULL = 'full';
    const ACCOUNT_TYPE_UK_DOMESTIC = 'ukDomestic';
    const ACCOUNT_TYPE_INTERNATIONAL_ROAD = 'internationalRoad';
    const ACCOUNT_TYPE_INTERNATIONAL_AIR = 'internationalAir';
    const ACCOUNT_TYPE_RETURNS = 'returns';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getCustomsDeclarationAllowableValues()
    {
        return [
            self::CUSTOMS_DECLARATION_NONE,
            self::CUSTOMS_DECLARATION_BASIC,
            self::CUSTOMS_DECLARATION_FULL,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getAccountTypeAllowableValues()
    {
        return [
            self::ACCOUNT_TYPE_UK_DOMESTIC,
            self::ACCOUNT_TYPE_INTERNATIONAL_ROAD,
            self::ACCOUNT_TYPE_INTERNATIONAL_AIR,
            self::ACCOUNT_TYPE_RETURNS,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['transitTimeDescription'] = $data['transitTimeDescription'] ?? null;
        $this->container['minTransitTime'] = $data['minTransitTime'] ?? null;
        $this->container['maxTransitTime'] = $data['maxTransitTime'] ?? null;
        $this->container['servicePoint'] = $data['servicePoint'] ?? null;
        $this->container['servicePointLocationTypes'] = $data['servicePointLocationTypes'] ?? null;
        $this->container['customsDeclaration'] = $data['customsDeclaration'] ?? null;
        $this->container['inBoxReturn'] = $data['inBoxReturn'] ?? null;
        $this->container['bulky'] = $data['bulky'] ?? null;
        $this->container['accountType'] = $data['accountType'] ?? null;
        $this->container['neighbourDelivery'] = $data['neighbourDelivery'] ?? null;
        $this->container['secureLocationDelivery'] = $data['secureLocationDelivery'] ?? null;
        $this->container['services'] = $data['services'] ?? null;
        $this->container['iossApplies'] = $data['iossApplies'] ?? null;
        $this->container['nonIossAllowed'] = $data['nonIossAllowed'] ?? null;
        $this->container['iossDutiesPaid'] = $data['iossDutiesPaid'] ?? null;
        $this->container['pallets'] = $data['pallets'] ?? null;
        $this->container['exchangeOnDelivery'] = $data['exchangeOnDelivery'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getCustomsDeclarationAllowableValues();
        if (!is_null($this->container['customsDeclaration']) && !in_array($this->container['customsDeclaration'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'customsDeclaration', must be one of '%s'",
                $this->container['customsDeclaration'],
                implode("', '", $allowedValues)
            );
        }

        $allowedValues = $this->getAccountTypeAllowableValues();
        if (!is_null($this->container['accountType']) && !in_array($this->container['accountType'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'accountType', must be one of '%s'",
                $this->container['accountType'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets transitTimeDescription
     *
     * @return string|null
     */
    public function getTransitTimeDescription()
    {
        return $this->container['transitTimeDescription'];
    }

    /**
     * Sets transitTimeDescription
     *
     * @param string|null $transitTimeDescription Description of transit time to destination country using this product e.g. 3-5 days.
     *
     * @return self
     */
    public function setTransitTimeDescription($transitTimeDescription)
    {
        $this->container['transitTimeDescription'] = $transitTimeDescription;

        return $this;
    }

    /**
     * Gets minTransitTime
     *
     * @return int|null
     */
    public function getMinTransitTime()
    {
        return $this->container['minTransitTime'];
    }

    /**
     * Sets minTransitTime
     *
     * @param int|null $minTransitTime Minimum transit time to destination country in days. Can be used alongside MaxTransitTime to display a range of estimated delivery dates from date of despatch
     *
     * @return self
     */
    public function setMinTransitTime($minTransitTime)
    {
        $this->container['minTransitTime'] = $minTransitTime;

        return $this;
    }

    /**
     * Gets maxTransitTime
     *
     * @return int|null
     */
    public function getMaxTransitTime()
    {
        return $this->container['maxTransitTime'];
    }

    /**
     * Sets maxTransitTime
     *
     * @param int|null $maxTransitTime Maximum transit time to destination country in days. Can be used to calculate an estimated maximum delivery date from date of pickup
     *
     * @return self
     */
    public function setMaxTransitTime($maxTransitTime)
    {
        $this->container['maxTransitTime'] = $maxTransitTime;

        return $this;
    }

    /**
     * Gets servicePoint
     *
     * @return bool|null
     */
    public function getServicePoint()
    {
        return $this->container['servicePoint'];
    }

    /**
     * Sets servicePoint
     *
     * @param bool|null $servicePoint Given the requested destination and parcel size would a Service Point direct delivery be available with this product? true = Yes, false = No. An example use case would be to enable servicepoint location finder in a UI. IMPORTANT - To ensure valid parcel sizes, please filter service points in the servicepoint location finder by the locationTypes available in the servicePointLocationTypes list
     *
     * @return self
     */
    public function setServicePoint($servicePoint)
    {
        $this->container['servicePoint'] = $servicePoint;

        return $this;
    }

    /**
     * Gets servicePointLocationTypes
     *
     * @return \DHLUK\Model\ProductDeliveryCapabilitiesServicePointLocationTypes[]|null
     */
    public function getServicePointLocationTypes()
    {
        return $this->container['servicePointLocationTypes'];
    }

    /**
     * Sets servicePointLocationTypes
     *
     * @param \DHLUK\Model\ProductDeliveryCapabilitiesServicePointLocationTypes[]|null $servicePointLocationTypes If service point delivery is available for this product at the destination then this is a list of service point location types that are available based on the shipment weight and dimensions.
     *
     * @return self
     */
    public function setServicePointLocationTypes($servicePointLocationTypes)
    {
        $this->container['servicePointLocationTypes'] = $servicePointLocationTypes;

        return $this;
    }

    /**
     * Gets customsDeclaration
     *
     * @return string|null
     */
    public function getCustomsDeclaration()
    {
        return $this->container['customsDeclaration'];
    }

    /**
     * Sets customsDeclaration
     *
     * @param string|null $customsDeclaration Level of customs declaration required for this product at the destination. Possible values are none, basic or full.
     *
     * @return self
     */
    public function setCustomsDeclaration($customsDeclaration)
    {
        $allowedValues = $this->getCustomsDeclarationAllowableValues();
        if (!is_null($customsDeclaration) && !in_array($customsDeclaration, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'customsDeclaration', must be one of '%s'",
                    $customsDeclaration,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['customsDeclaration'] = $customsDeclaration;

        return $this;
    }

    /**
     * Gets inBoxReturn
     *
     * @return bool|null
     */
    public function getInBoxReturn()
    {
        return $this->container['inBoxReturn'];
    }

    /**
     * Sets inBoxReturn
     *
     * @param bool|null $inBoxReturn Is an inbox return capability available?
     *
     * @return self
     */
    public function setInBoxReturn($inBoxReturn)
    {
        $this->container['inBoxReturn'] = $inBoxReturn;

        return $this;
    }

    /**
     * Gets bulky
     *
     * @return bool|null
     */
    public function getBulky()
    {
        return $this->container['bulky'];
    }

    /**
     * Sets bulky
     *
     * @param bool|null $bulky Given the shipment weight and dimensions, if this product is used, would the shipment be classified as Bulky?
     *
     * @return self
     */
    public function setBulky($bulky)
    {
        $this->container['bulky'] = $bulky;

        return $this;
    }

    /**
     * Gets accountType
     *
     * @return string|null
     */
    public function getAccountType()
    {
        return $this->container['accountType'];
    }

    /**
     * Sets accountType
     *
     * @param string|null $accountType Type of DHL eCommerce UK account required when creating a shipment for this product
     *
     * @return self
     */
    public function setAccountType($accountType)
    {
        $allowedValues = $this->getAccountTypeAllowableValues();
        if (!is_null($accountType) && !in_array($accountType, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'accountType', must be one of '%s'",
                    $accountType,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['accountType'] = $accountType;

        return $this;
    }

    /**
     * Gets neighbourDelivery
     *
     * @return bool|null
     */
    public function getNeighbourDelivery()
    {
        return $this->container['neighbourDelivery'];
    }

    /**
     * Sets neighbourDelivery
     *
     * @param bool|null $neighbourDelivery Can the shipment be left with a neighbour at delivery?
     *
     * @return self
     */
    public function setNeighbourDelivery($neighbourDelivery)
    {
        $this->container['neighbourDelivery'] = $neighbourDelivery;

        return $this;
    }

    /**
     * Gets secureLocationDelivery
     *
     * @return bool|null
     */
    public function getSecureLocationDelivery()
    {
        return $this->container['secureLocationDelivery'];
    }

    /**
     * Sets secureLocationDelivery
     *
     * @param bool|null $secureLocationDelivery Can the shipment be left in a secure location at delivery?
     *
     * @return self
     */
    public function setSecureLocationDelivery($secureLocationDelivery)
    {
        $this->container['secureLocationDelivery'] = $secureLocationDelivery;

        return $this;
    }

    /**
     * Gets services
     *
     * @return \DHLUK\Model\ProductDeliveryCapabilitiesServices[]|null
     */
    public function getServices()
    {
        return $this->container['services'];
    }

    /**
     * Sets services
     *
     * @param \DHLUK\Model\ProductDeliveryCapabilitiesServices[]|null $services services
     *
     * @return self
     */
    public function setServices($services)
    {
        $this->container['services'] = $services;

        return $this;
    }

    /**
     * Gets iossApplies
     *
     * @return bool|null
     */
    public function getIossApplies()
    {
        return $this->container['iossApplies'];
    }

    /**
     * Sets iossApplies
     *
     * @param bool|null $iossApplies Can the IOSS VAT capability be used with this product? A valid IOSS number must be supplied when adding a shipment.
     *
     * @return self
     */
    public function setIossApplies($iossApplies)
    {
        $this->container['iossApplies'] = $iossApplies;

        return $this;
    }

    /**
     * Gets nonIossAllowed
     *
     * @return bool|null
     */
    public function getNonIossAllowed()
    {
        return $this->container['nonIossAllowed'];
    }

    /**
     * Sets nonIossAllowed
     *
     * @param bool|null $nonIossAllowed Can this product can still be used under standard terms without using the IOSS VAT capability and not supplying an IOSS number?
     *
     * @return self
     */
    public function setNonIossAllowed($nonIossAllowed)
    {
        $this->container['nonIossAllowed'] = $nonIossAllowed;

        return $this;
    }

    /**
     * Gets iossDutiesPaid
     *
     * @return string|null
     */
    public function getIossDutiesPaid()
    {
        return $this->container['iossDutiesPaid'];
    }

    /**
     * Sets iossDutiesPaid
     *
     * @param string|null $iossDutiesPaid Optional parameter to indicate which type of dutiesPaid MUST be used if IOSS is used. DDP (Delivered Duties Paid), DAP (Delivered at Place).
     *
     * @return self
     */
    public function setIossDutiesPaid($iossDutiesPaid)
    {
        $this->container['iossDutiesPaid'] = $iossDutiesPaid;

        return $this;
    }

    /**
     * Gets pallets
     *
     * @return bool|null
     */
    public function getPallets()
    {
        return $this->container['pallets'];
    }

    /**
     * Sets pallets
     *
     * @param bool|null $pallets Is this product for a shipment of pallets where the number of pallets must then be captured to create a shipment?
     *
     * @return self
     */
    public function setPallets($pallets)
    {
        $this->container['pallets'] = $pallets;

        return $this;
    }

    /**
     * Gets exchangeOnDelivery
     *
     * @return bool|null
     */
    public function getExchangeOnDelivery()
    {
        return $this->container['exchangeOnDelivery'];
    }

    /**
     * Sets exchangeOnDelivery
     *
     * @param bool|null $exchangeOnDelivery Is exchange on delivery available with this product?
     *
     * @return self
     */
    public function setExchangeOnDelivery($exchangeOnDelivery)
    {
        $this->container['exchangeOnDelivery'] = $exchangeOnDelivery;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


